version: "3"

networks:
  default_network_name:
    driver: macvlan
    driver_opts:
      parent: eno4
    ipam:
      config:
        - subnet: default_ip.0/24
          gateway: default_ip.254
          dns: 8.8.8.8
#  dn:
#    driver: macvlan
#    driver_opts:
#      parent: eno1
#    ipam:
#      config:
#        - subnet: 192.168.2.0/24
#          gateway: 192.168.2.254
#          dns: 8.8.8.8

services:
  mongo:
    container_name: 1_mongo
    image: mongo:latest
    restart: unless-stopped
    ports:
      - 27017:27017
      - 7070:7070
    networks:
      default_network_name:
        ipv4_address: default_ip.1
    volumes:
      - './data:/data/db'
    stdin_open: true
    tty: true
    privileged: true
    entrypoint: /sbin/init
    
  udr:
    container_name: udr
    build:
      image: udr:latest
      context: ./coreimages-run/udr
      dockerfile: containerfile
    restart: unless-stopped
    networks:
      default_network_name:
        ipv4_address: default_ip.20
    stdin_open: true
    tty: true
    privileged: true
    entrypoint: /sbin/init
    depends_on:
      - mongo

  udm:
    container_name: udm
    build:
      image: udm:latest
      context: ./coreimages-run/udm
      dockerfile: containerfile
    restart: unless-stopped
    networks:
      default_network_name:
        ipv4_address: default_ip.12
    stdin_open: true
    tty: true
    privileged: true
    entrypoint: /sbin/init
    depends_on:
      - udr

  smf:
    container_name: smf
    build:
      image: smf:latest
      context: ./coreimages-run/smf
      dockerfile: containerfile
    restart: unless-stopped
    networks:
      default_network_name:
        ipv4_address: default_ip.4
    stdin_open: true
    tty: true
    privileged: true
    entrypoint: /sbin/init
    depends_on:
      - pcrf

  amf:
    container_name: amf
    build:
      image: amf:latest
      context: ./coreimages-run/amf
      dockerfile: containerfile
    restart: unless-stopped
    networks:
      default_network_name:
        ipv4_address: default_ip.5
    stdin_open: true
    tty: true
    privileged: true
    entrypoint: /sbin/init
    depends_on:
      - udr

  upf:
    container_name: upf
    build:
      image: upf:latest
      context: ./coreimages-run/upf
      dockerfile: containerfile
    restart: unless-stopped
    networks:
      default_network_name:
        ipv4_address: default_ip.7
    #  dn:
    #    ipv4_address: 192.168.2.224
    stdin_open: true
    tty: true
    privileged: true
    entrypoint: /sbin/init
    depends_on:
      - udr

  nrf:
    container_name: nrf
    build:
      image: nrf:latest
      context: ./coreimages-run/nrf
      dockerfile: containerfile
    restart: unless-stopped
    networks:
      default_network_name:
        ipv4_address: default_ip.10
    stdin_open: true
    tty: true
    privileged: true
    entrypoint: /sbin/init
    depends_on:
      - udr

  scp:
    container_name: scp
    build:
      image: scp:latest
      context: ./coreimages-run/scp
      dockerfile: containerfile
    restart: unless-stopped
    networks:
      default_network_name:
        ipv4_address: default_ip.200
    stdin_open: true
    tty: true
    privileged: true
    entrypoint: /sbin/init
    depends_on:
      - udr

  ausf:
    container_name: ausf
    build:
      image: ausf:latest
      context: ./coreimages-run/ausf
      dockerfile: containerfile
    restart: unless-stopped
    networks:
      default_network_name:
        ipv4_address: default_ip.11
    stdin_open: true
    tty: true
    privileged: true
    entrypoint: /sbin/init
    depends_on:
      - udr

  pcf:
    container_name: pcf
    build:
      image: pcf:latest
      context: ./coreimages-run/pcf
      dockerfile: containerfile
    restart: unless-stopped
    networks:
      default_network_name:
        ipv4_address: default_ip.13
    stdin_open: true
    tty: true
    privileged: true
    entrypoint: /sbin/init
    depends_on:
      - udr

  nssf:
    container_name: nssf
    build:
      image: nssf:latest
      context: ./coreimages-run/nssf
      dockerfile: containerfile
    restart: unless-stopped
    networks:
      default_network_name:
        ipv4_address: default_ip.14
    stdin_open: true
    tty: true
    privileged: true
    entrypoint: /sbin/init
    depends_on:
      - udr

  bsf:
    container_name: bsf
    build:
      image: bsf:latest
      context: ./coreimages-run/bsf
      dockerfile: containerfile
    restart: unless-stopped
    networks:
      default_network_name:
        ipv4_address: default_ip.15
    stdin_open: true
    tty: true
    privileged: true
    entrypoint: /sbin/init
    depends_on:
      - udr
      
#  hss:
#    container_name: 4_hss
#    build:
#      image: hss:latest
#      context: ./coreimages-run/4_hss
#      dockerfile: containerfile
#    restart: unless-stopped
#    networks:
#      default_network_name:
#        ipv4_address: default_ip.8
#    stdin_open: true
#    tty: true
#    privileged: true
#    entrypoint: /sbin/init
#    depends_on:
#      - mongo

#  pcrf:
#    container_name: 4_pcrf
#    build:
#      image: pcrf:latest
#      context: ./coreimages-run/4_pcrf
#      dockerfile: containerfile
#    restart: unless-stopped
#    networks:
#      default_network_name:
#        ipv4_address: default_ip.9
#    stdin_open: true
#    tty: true
#    privileged: true
#    entrypoint: /sbin/init
#    depends_on:
#      - mongo

#  mme:
#    container_name: 4_mme
#    build:
#      image: mme:latest
#      context: ./coreimages-run/4_mme
#      dockerfile: containerfile
#    restart: unless-stopped
#    networks:
#      default_network_name:
#        ipv4_address: default_ip.2
#    stdin_open: true
#    tty: true
#    privileged: true
#    entrypoint: /sbin/init
#    depends_on:
#      - hss

#  sgwc:
#    container_name: 4_sgwc
#    build:
#      image: sgwc:latest
#      context: ./coreimages-run/4_sgwc
#      dockerfile: containerfile
#    restart: unless-stopped
#    networks:
#      default_network_name:
#        ipv4_address: default_ip.3
#    stdin_open: true
#    tty: true
#    privileged: true
#    entrypoint: /sbin/init
#    depends_on:
#      - mme

#  sgwu:
#    container_name: 4_sgwu
#    build:
#      image: sgwu:latest
#      context: ./coreimages-run/4_sgwu
#      dockerfile: containerfile
#    restart: unless-stopped
#    networks:
#      default_network_name:
#        ipv4_address: default_ip.6
#    stdin_open: true
#    tty: true
#    privileged: true
#    entrypoint: /sbin/init
#    depends_on:
#      - sgwc
